# Generated by Django 4.2 on 2025-05-28 05:18

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("birth_date", models.DateField()),
                ("gmail", models.EmailField(max_length=254)),
                (
                    "activation_time",
                    models.CharField(
                        choices=[
                            ("morning", "🌅 아침 (6~11시)"),
                            ("afternoon", "☀️ 낮 (12~17시)"),
                            ("evening", "🌙 저녁 / 밤 (18~24시)"),
                            ("dawn", "🌃 새벽 (1~5시)"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "i_e",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ]
                    ),
                ),
                (
                    "n_s",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ]
                    ),
                ),
                (
                    "t_f",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ]
                    ),
                ),
                (
                    "p_j",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ]
                    ),
                ),
                (
                    "main_character",
                    models.CharField(
                        choices=[
                            ("Ailee", "나의 생각/감정을 정리해주는 친구"),
                            ("Joon", "결정을 도와주는 상담가"),
                            ("Nick", "개념 설명을 쉽게 해주는 조교"),
                            ("Chad", "강력한 성장과 동기부여를 도와주는 친구"),
                            ("Rin", "뇌과학적으로 나의 생각/감정을 정리해주는 친구"),
                        ],
                        max_length=10,
                    ),
                ),
                ("ailee_chat_count", models.PositiveSmallIntegerField(default=0)),
                ("joon_chat_count", models.PositiveSmallIntegerField(default=0)),
                ("nick_chat_count", models.PositiveSmallIntegerField(default=0)),
                ("chad_chat_count", models.PositiveSmallIntegerField(default=0)),
                ("rin_chat_count", models.PositiveSmallIntegerField(default=0)),
                ("emotion_count", models.PositiveSmallIntegerField(default=0)),
                ("decision_count", models.PositiveSmallIntegerField(default=0)),
                ("social_count", models.PositiveSmallIntegerField(default=0)),
                ("identity_count", models.PositiveSmallIntegerField(default=0)),
                ("motivation_count", models.PositiveSmallIntegerField(default=0)),
                ("learning_count", models.PositiveSmallIntegerField(default=0)),
            ],
        ),
    ]
